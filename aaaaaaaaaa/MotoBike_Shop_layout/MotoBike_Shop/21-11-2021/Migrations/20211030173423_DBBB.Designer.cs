// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _21_11_2021.Areas.admin.Data;

namespace _21_11_2021.Migrations
{
    [DbContext(typeof(DPContext))]
    [Migration("20211030173423_DBBB")]
    partial class DBBB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "c74e1e30-031a-47cb-9293-a0447862b9f9",
                            ConcurrencyStamp = "f096abcc-ccfb-4f9c-b9e5-a8149c46c6c3",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "e6baf8e4-e7fc-4a08-ac51-f55fdd3ed76a",
                            ConcurrencyStamp = "adb7a4ce-244a-4a74-8751-6304462291e6",
                            Name = "Visitor",
                            NormalizedName = "VISITOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaChiTietHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("ChietKhau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdDonHang")
                        .HasColumnType("int");

                    b.Property<int?>("IdDonHang1")
                        .HasColumnType("int");

                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<int?>("MaSPMaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("MaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("ThanhTien")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaChiTietHoaDon");

                    b.HasIndex("IdDonHang");

                    b.HasIndex("IdDonHang1");

                    b.HasIndex("MaSPMaSanPham");

                    b.ToTable("chiTietHoaDons");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.DanhGia", b =>
                {
                    b.Property<int>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdDHIdDonHang")
                        .HasColumnType("int");

                    b.Property<int>("IdDonHang")
                        .HasColumnType("int");

                    b.Property<int?>("KhachHangMaKhachHang")
                        .HasColumnType("int");

                    b.Property<int?>("MaSPMaSanPham")
                        .HasColumnType("int");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSanPham");

                    b.HasIndex("IdDHIdDonHang");

                    b.HasIndex("KhachHangMaKhachHang");

                    b.HasIndex("MaSPMaSanPham");

                    b.ToTable("danhGias");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.DanhMuc", b =>
                {
                    b.Property<int>("MaDanhMuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenDanhMuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaDanhMuc");

                    b.ToTable("danhMucs");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.DonHang", b =>
                {
                    b.Property<int>("IdDonHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("MaDonHang")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdDonHang");

                    b.ToTable("donHangs");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.Footshows", b =>
                {
                    b.Property<int>("IdFootShow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdFootShow");

                    b.ToTable("footshows");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("KhachHangMaKhachHang")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachHang")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDatHang")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("KhachHangMaKhachHang");

                    b.HasIndex("UserId");

                    b.ToTable("hoaDons");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKhachHang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaKhachHang");

                    b.ToTable("khachHangs");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.KhuyenMai", b =>
                {
                    b.Property<int>("MaKhuyenMai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("SoTienGiam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenKhuyenMai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaKhuyenMai");

                    b.ToTable("khuyenMais");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.LoaiSanPham", b =>
                {
                    b.Property<int>("MaLoaiSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DanhMucMaDanhMuc")
                        .HasColumnType("int");

                    b.Property<int>("MaDanhMuc")
                        .HasColumnType("int");

                    b.Property<string>("TenLoaiSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaLoaiSanPham");

                    b.HasIndex("DanhMucMaDanhMuc");

                    b.ToTable("loaiSanPhams");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.SanPham", b =>
                {
                    b.Property<int>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaDaKhuyenMai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaKhuyenMai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HangMuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKhuyenMai")
                        .HasColumnType("int");

                    b.Property<int>("MaLoaiSanPham")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaSanPham");

                    b.HasIndex("MaKhuyenMai");

                    b.HasIndex("MaLoaiSanPham");

                    b.ToTable("sanPhams");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.Slideshows", b =>
                {
                    b.Property<int>("IdSlideShow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoiBat")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdSlideShow");

                    b.ToTable("slideshows");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.TinTuc", b =>
                {
                    b.Property<int>("MaTinTuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChiTiet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoiBat")
                        .HasColumnType("int");

                    b.Property<string>("TenTinTuc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaTinTuc");

                    b.ToTable("tinTucs");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Rank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_21_11_2021.Areas.admin.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.ChiTietHoaDon", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.HoaDon", "MaHD")
                        .WithMany("lstChiTietHoaDon")
                        .HasForeignKey("IdDonHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_21_11_2021.Areas.admin.Models.DonHang", "IdDon")
                        .WithMany("lstChiTietHoaDon")
                        .HasForeignKey("IdDonHang1");

                    b.HasOne("_21_11_2021.Areas.admin.Models.SanPham", "MaSP")
                        .WithMany("chitiethoadon")
                        .HasForeignKey("MaSPMaSanPham");

                    b.Navigation("IdDon");

                    b.Navigation("MaHD");

                    b.Navigation("MaSP");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.DanhGia", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.DonHang", "IdDH")
                        .WithMany("lstDanhGia")
                        .HasForeignKey("IdDHIdDonHang");

                    b.HasOne("_21_11_2021.Areas.admin.Models.KhachHang", null)
                        .WithMany("lsDanhGia")
                        .HasForeignKey("KhachHangMaKhachHang");

                    b.HasOne("_21_11_2021.Areas.admin.Models.SanPham", "MaSP")
                        .WithMany("danhgia")
                        .HasForeignKey("MaSPMaSanPham");

                    b.Navigation("IdDH");

                    b.Navigation("MaSP");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.HoaDon", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.KhachHang", null)
                        .WithMany("lstHoaDon")
                        .HasForeignKey("KhachHangMaKhachHang");

                    b.HasOne("_21_11_2021.Areas.admin.Models.User", null)
                        .WithMany("lstHoaDon")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.LoaiSanPham", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.DanhMuc", null)
                        .WithMany("lstLoaiSanPham")
                        .HasForeignKey("DanhMucMaDanhMuc");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.SanPham", b =>
                {
                    b.HasOne("_21_11_2021.Areas.admin.Models.KhuyenMai", "KMai")
                        .WithMany("lstSanPham")
                        .HasForeignKey("MaKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_21_11_2021.Areas.admin.Models.LoaiSanPham", "Loai")
                        .WithMany("lstSanPham")
                        .HasForeignKey("MaLoaiSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KMai");

                    b.Navigation("Loai");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.DanhMuc", b =>
                {
                    b.Navigation("lstLoaiSanPham");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.DonHang", b =>
                {
                    b.Navigation("lstChiTietHoaDon");

                    b.Navigation("lstDanhGia");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.HoaDon", b =>
                {
                    b.Navigation("lstChiTietHoaDon");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.KhachHang", b =>
                {
                    b.Navigation("lsDanhGia");

                    b.Navigation("lstHoaDon");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.KhuyenMai", b =>
                {
                    b.Navigation("lstSanPham");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.LoaiSanPham", b =>
                {
                    b.Navigation("lstSanPham");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.SanPham", b =>
                {
                    b.Navigation("chitiethoadon");

                    b.Navigation("danhgia");
                });

            modelBuilder.Entity("_21_11_2021.Areas.admin.Models.User", b =>
                {
                    b.Navigation("lstHoaDon");
                });
#pragma warning restore 612, 618
        }
    }
}
